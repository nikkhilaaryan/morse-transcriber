{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"morse-transcriber Documentation","text":"<p>Welcome to the official documentation for morse-transcriber \u2014 a Python-based command-line tool for bidirectional conversion between alphanumeric text and International Morse code.</p>"},{"location":"#overview","title":"Overview","text":"<p>morse-transcriber is designed for developers, and communication enthusiasts who need accurate, standards-compliant text \u2194 morse-code conversion. It supports both interactive mode and one-shot command execution, ensuring flexibility for different workflows.</p> <p>Key capabilities: - Text \u2192 Morse conversion - Morse \u2192 Text decoding - Strict input validation with meaningful error messages - Clipboard integration for quick copy-paste results - Cross-platform compatibility (Windows, macOS, Linux)  </p>"},{"location":"#quick-start","title":"Quick Start","text":"<ul> <li> <p>Installation:   See the Installation Guide for step-by-step setup instructions.</p> </li> <li> <p>Basic Usage:   Learn about both interactive and one-shot command execution in the Commands section.</p> </li> </ul>"},{"location":"#development-guidelines","title":"Development Guidelines","text":"<p>If you want to contribute: - Follow PEP 8 code style - Keep <code>morse_map.py</code> authoritative and free of duplicates - Write tests before committing changes - Review Contributing Guidelines</p>"},{"location":"#additional-resources","title":"Additional Resources","text":"<ul> <li>Changelog \u2014 Track version history and updates.  </li> <li>GitHub Repository \u2014 Source code, issues, and pull requests.  </li> <li>PyPI Package \u2014 Latest release for installation.</li> </ul> <p>Note: This project is under active development. Features, APIs, and documentation may change without prior notice.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"CHANGELOG/#unreleased","title":"[Unreleased]","text":""},{"location":"CHANGELOG/#added","title":"Added","text":"<ul> <li>Placeholder for upcoming changes.</li> </ul>"},{"location":"CHANGELOG/#100-2025-08-15","title":"[1.0.0] - 2025-08-15","text":""},{"location":"CHANGELOG/#added_1","title":"Added","text":"<ul> <li>First stable release of morse-transcriber on PyPI.</li> <li>Complete set of converters for:</li> <li>Alpha \u2192 Morse</li> <li>Morse \u2192 Alpha</li> <li>CLI interface for encoding and decoding.</li> <li>Validators for alpha and morse inputs.</li> <li>Comprehensive mappings for Morse code.</li> <li>Full test suite for converters, mappings, and validators.</li> </ul>"},{"location":"CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Refactored project structure for maintainability and clarity.</li> <li>Updated <code>pyproject.toml</code> with correct metadata, version, and dependencies.</li> </ul>"},{"location":"CHANGELOG/#removed","title":"Removed","text":"<ul> <li>All old experimental v0.1.x code and unused modules.</li> </ul>"},{"location":"CHANGELOG/#011-2025-08-14","title":"[0.1.1] - 2025-08-14","text":""},{"location":"CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>Minor bug fixes in converter logic.</li> </ul>"},{"location":"CHANGELOG/#010-2025-08-14","title":"[0.1.0] - 2025-08-14","text":""},{"location":"CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Initial prototype release with basic alpha-to-morse and morse-to-alpha conversion.</li> </ul>"},{"location":"development/changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"development/changelog/#100-2025-08-15","title":"[1.0.0] - 2025-08-15","text":""},{"location":"development/changelog/#added","title":"Added","text":"<ul> <li>Full MkDocs documentation with Material dark theme.</li> <li>Dedicated sections for:</li> <li>Installation</li> <li>Commands</li> <li>Contributing</li> <li>Changelog</li> <li>CLI help command: <code>morse-transcriber --help</code>.</li> <li>CLI version command: <code>morse-transcriber --version</code>.</li> <li>Clipboard support with <code>pyperclip</code> dependency.</li> <li>Interactive menu mode and one-shot argument mode.</li> <li>Strict validation for text and Morse code inputs.</li> </ul>"},{"location":"development/changelog/#changed","title":"Changed","text":"<ul> <li>Project restructured into <code>src/</code> layout for packaging best practices.</li> <li>Updated README with badges, detailed usage, and contribution guidelines.</li> </ul>"},{"location":"development/changelog/#removed","title":"Removed","text":"<ul> <li>Old incomplete documentation files from previous releases.</li> </ul>"},{"location":"development/changelog/#011-2025-08-14","title":"[0.1.1] - 2025-08-14","text":""},{"location":"development/changelog/#fixed","title":"Fixed","text":"<ul> <li>Minor bug fixes to conversion logic.</li> <li>Adjusted CLI argument parsing.</li> </ul>"},{"location":"development/changelog/#known-issues","title":"Known Issues","text":"<ul> <li>Clipboard functionality not working on some Linux distributions.</li> <li>Documentation incomplete.</li> </ul>"},{"location":"development/changelog/#010-2025-08-14","title":"[0.1.0] - 2025-08-14","text":""},{"location":"development/changelog/#added_1","title":"Added","text":"<ul> <li>Initial public release with basic:</li> <li>Text \u2192 Morse conversion</li> <li>Morse \u2192 Text conversion</li> <li>Basic CLI argument handling.</li> </ul>"},{"location":"development/changelog/#known-issues_1","title":"Known Issues","text":"<ul> <li>Missing input validation for unsupported characters.</li> <li>No automated testing implemented.</li> </ul>"},{"location":"development/changelog/#unreleased","title":"[Unreleased]","text":"<ul> <li>Features and fixes planned for the next update.</li> </ul>"},{"location":"development/contributing/","title":"Contributing Guidelines","text":"<p>We welcome contributions to morse-transcriber! Whether you are fixing bugs, adding features, improving documentation, or suggesting ideas \u2014 your efforts are appreciated.</p>"},{"location":"development/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>By participating in this project, you agree to follow our Code of Conduct. This ensures a respectful and collaborative environment for all contributors.</p>"},{"location":"development/contributing/#development-setup","title":"Development Setup","text":""},{"location":"development/contributing/#1-fork-clone","title":"1. Fork &amp; Clone","text":"<ol> <li>Fork the repository on GitHub and clone it to your local machine:     <pre><code>git clone https://github.com/&lt;your-username&gt;/morse-transcriber.git\ncd morse-transcriber\n</code></pre></li> <li>Create a Virtual Environment     It\u2019s best to work inside an isolated Python environment:     <pre><code>python -m venv venv\nsource venv/bin/activate   # On Linux/Mac\nvenv\\Scripts\\activate      # On Windows\n</code></pre></li> <li>Install in Editable Mode     <pre><code>pip install -e .[dev]\n</code></pre> This allows you to run the CLI directly while making changes to the source code.</li> </ol>"},{"location":"development/contributing/#project-structure","title":"Project Structure","text":""},{"location":"development/contributing/#coding-standards","title":"Coding Standards","text":"<ul> <li>Follow PEP 8 for Python code style.</li> <li>Write clear docstrings for all public functions and classes.</li> <li>Ensure dictionary mappings in morse_map.py are authoritative and unique.</li> <li>Avoid hardcoding values; use constants or configuration where possible.</li> </ul>"},{"location":"development/contributing/#testing","title":"Testing","text":"<p>Run the test suite before committing changes:     <pre><code>pytest\n</code></pre> All pull requests must pass the test suite and maintain at least the current coverage level.</p>"},{"location":"development/contributing/#git-workflow","title":"Git Workflow","text":"<ol> <li>Create a branch for your work:     <pre><code>git checkout -b feature/new-command\n</code></pre></li> <li>Commit changes with clear messages:     <pre><code>git commit -m \"Add new command for batch processing\"\n</code></pre></li> <li>Push your branch:     <pre><code>git push origin feature/new-command\n</code></pre></li> <li>Open a Pull Request to the master branch.</li> </ol>"},{"location":"development/contributing/#changelog-updates","title":"Changelog Updates","text":"<p>Every user-facing change should be documented in CHANGELOG.md. Use the Keep a Changelog format and Semantic Versioning (SemVer).</p>"},{"location":"development/contributing/#communication","title":"Communication","text":"<ul> <li>For bug reports and feature requests, open a GitHub Issue.</li> <li>For large features, please start a discussion before implementing.</li> <li>PR reviews may request changes for code style, clarity, or maintainability.</li> </ul>"},{"location":"development/contributing/#recognition","title":"Recognition","text":"<p>Contributors will be credited in release notes and the project documentation.</p> <p>Thank you for making morse-transcriber better!</p>"},{"location":"usage/commands/","title":"Command Reference","text":"<p>This section describes how to use morse-transcriber from the command line. The tool supports both interactive mode (menu-driven) and one-shot mode (direct commands).</p>"},{"location":"usage/commands/#1-interactive-mode","title":"1. Interactive Mode","text":"<p>Interactive mode is useful when performing multiple conversions in a single session.</p> <p>Command: <pre><code>morse-transcriber\n</code></pre> Example session\" <pre><code>morse-transcriber CLI\n1. text to morse\n2. morse to text\n3. morse-transcriber terminated.\nenter choice (1/2/3): 1\nenter text: SOS\nmorse-Code: ... --- ...\n</code></pre> Notes: * The program will keep running until you choose Exit. * Input is validated before conversion. * Output is automatically copied to the clipboard (if pyperclip is installed).</p>"},{"location":"usage/commands/#2-one-shot-argument-mode","title":"2. One-Shot Argument Mode","text":"<p>Convert Text to Morse Code Command: <pre><code>morse-transcriber --text \"SOS\"\n</code></pre> <pre><code>Expected Output: ... --- ...\n</code></pre> Convert Morse Code to Text Command: <pre><code>morse-transcriber --morse \"... --- ...\"\n</code></pre> <pre><code>Expected Output: SOS\n</code></pre></p>"},{"location":"usage/commands/#important-commands","title":"Important Commands","text":"<ol> <li> <p>Show Help Displays all available options and usage instructions.     <pre><code>morse-transcriber --help\n</code></pre></p> </li> <li> <p>Show Version Displays the currently installed version of morse-transcriber.     <pre><code>morse-transcriber --version\n</code></pre></p> </li> </ol>"},{"location":"usage/commands/#tips","title":"Tips","text":"<ul> <li>Wrap your input in quotes to avoid shell parsing issues.</li> <li>Use interactive mode for quick multiple conversions.</li> <li>Use one-shot mode in scripts or automation tasks.</li> </ul>"},{"location":"usage/installation/","title":"Installation Guide","text":"<p>This guide explains how to install morse-transcriber on your system. The tool supports Python 3.8+ and works on Windows, macOS, and Linux.</p>"},{"location":"usage/installation/#installing-from-pypi-recommended","title":"Installing from PyPI (Recommended)","text":"<p>The easiest way to install is via pip:</p> <p><pre><code>pip install morse-transcriber\n</code></pre> Once installed, you can run the CLI directly: <pre><code>morse-transcriber --help\n</code></pre></p>"},{"location":"usage/installation/#installing-from-source-development-mode","title":"Installing from Source (Development Mode)","text":"<ol> <li>Clone the repository:    <pre><code>git clone https://github.com/&lt;your-organization&gt;/morse-transcriber.git\ncd morse-transcriber\n</code></pre></li> <li> <p>Create a virtual environment (recommended):     <pre><code>python -m venv .venv\nsource .venv/bin/activate     # macOS/Linux\n.venv\\Scripts\\activate        # Windows\n</code></pre></p> </li> <li> <p>Install in editable mode:     <pre><code>pip install -e .\n</code></pre></p> </li> </ol>"},{"location":"usage/installation/#verifying-installation","title":"Verifying Installation","text":"<pre><code>```bash\nmorse-transcriber --version\n```\n</code></pre>"},{"location":"usage/installation/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>Command not found:     Ensure your Python Scripts (Windows) or bin (Linux/macOS) directory is in your PATH.</p> </li> <li> <p>Permission errors:     Use --user with pip or install inside a virtual environment.</p> </li> </ul>"}]}